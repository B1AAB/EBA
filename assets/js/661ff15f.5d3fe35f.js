"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[6148],{8453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>a});var o=n(6540);const i={},s=o.createContext(i);function r(e){const t=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),o.createElement(s.Provider,{value:t},e.children)}},9633:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>a,default:()=>m,frontMatter:()=>r,metadata:()=>o,toc:()=>l});const o=JSON.parse('{"id":"bitcoin/sampling/rns","title":"Random Neighborhood","description":"This method samples a community by starting from a randomly selected root node, then wallking on its neighborhood using either of BFS, DFS, or customized Forest Fire algorithm. You may customize this algorithm by adjusting the community size in terms of nodes and edges, max hop distance from the root node, types of nodes and edges to include.","source":"@site/docs/bitcoin/sampling/rns.mdx","sourceDirName":"bitcoin/sampling","slug":"/bitcoin/sampling/rns","permalink":"/docs/bitcoin/sampling/rns","draft":false,"unlisted":false,"editUrl":"https://github.com/B1AAB/EBA/edit/main/website/docs/bitcoin/sampling/rns.mdx","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"id":"rns","title":"Random Neighborhood","sidebar_label":"Random Neighborhood","sidebar_position":1,"slug":"/bitcoin/sampling/rns"},"sidebar":"tutorialSidebar","previous":{"title":"Overview","permalink":"/docs/bitcoin/sampling/overview"},"next":{"title":"Forest-Fire","permalink":"/docs/bitcoin/sampling/forest-fire"}}');var i=n(4848),s=n(8453);const r={id:"rns",title:"Random Neighborhood",sidebar_label:"Random Neighborhood",sidebar_position:1,slug:"/bitcoin/sampling/rns"},a=void 0,d={},l=[{value:"Prerequisite",id:"prerequisite",level:3}];function c(e){const t={a:"a",em:"em",h3:"h3",li:"li",p:"p",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.p,{children:"This method samples a community by starting from a randomly selected root node, then wallking on its neighborhood using either of BFS, DFS, or customized Forest Fire algorithm. You may customize this algorithm by adjusting the community size in terms of nodes and edges, max hop distance from the root node, types of nodes and edges to include.\nThis section we discuss the alggorithm, and the steps to run it."}),"\n",(0,i.jsxs)(t.p,{children:["The ",(0,i.jsx)(t.em,{children:"random neighborhood sampling"})," method samples a community\nby starting from a randomly selected root node and then\npseudorandomly traversing its neighborhood using\nBreadth-First Search (BFS),\nDepth-First Search (DFS), or a customized Forest Fire algorithm."]}),"\n",(0,i.jsx)(t.p,{children:"You can customize this algorithm by adjusting parameters such as\nthe community size (in terms of nodes and edges),\nthe maximum hop distance from the root node,\nand the specific types of nodes and edges to include."}),"\n",(0,i.jsx)(t.p,{children:"In this section, we will discuss the algorithm and the steps required to run it."}),"\n",(0,i.jsx)(t.h3,{id:"prerequisite",children:"Prerequisite"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.a,{href:"/docs/gs/installation#neo4j",children:"Install and connect"})," to a Neo4j solution."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.a,{href:"/docs/bitcoin/etl/import",children:"Import"})," the database into the Neo4j solution."]}),"\n"]})]})}function m(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}}}]);