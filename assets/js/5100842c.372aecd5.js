"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[9516],{3522:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>r,default:()=>h,frontMatter:()=>a,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"bitcoin/etl/s2-traverse-bitcoin","title":"Extract Block Data","description":"Step 2. Traversing Blocks for Initial Data Extraction","source":"@site/docs/bitcoin/etl/s2-traverse-bitcoin.md","sourceDirName":"bitcoin/etl","slug":"/bitcoin/etl/traverse","permalink":"/docs/bitcoin/etl/traverse","draft":false,"unlisted":false,"editUrl":"https://github.com/B1AAB/EBA/edit/main/website/docs/bitcoin/etl/s2-traverse-bitcoin.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"title":"Extract Block Data","description":"Step 2. Traversing Blocks for Initial Data Extraction","sidebar_position":1,"slug":"/bitcoin/etl/traverse"},"sidebar":"tutorialSidebar","previous":{"title":"Sync a Bitcoin Node","permalink":"/docs/bitcoin/etl/node-sync"},"next":{"title":"Address Statistics","permalink":"/docs/bitcoin/etl/address-stats"}}');var s=n(4848),o=n(8453);const a={title:"Extract Block Data",description:"Step 2. Traversing Blocks for Initial Data Extraction",sidebar_position:1,slug:"/bitcoin/etl/traverse"},r=void 0,c={},l=[{value:"Performance and Scalability",id:"performance-and-scalability",level:3}];function d(e){const t={a:"a",code:"code",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(t.p,{children:["EBA connects to a ",(0,s.jsx)(t.a,{href:"/docs/bitcoin/etl/node-sync",children:"fully synchronized Bitcoin Core"}),"\nnode and iterates through a set of blocks,\nextracts transaction data, and encodes them as temporal heterogeneous graph."]}),"\n",(0,s.jsx)(t.p,{children:"For this task, you may take the following steps."}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.a,{href:"/docs/gs/installation",children:"Install the program"}),", if you have not installed already."]}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsxs)(t.p,{children:["Make sure ",(0,s.jsx)(t.code,{children:"bitcoin-qt"})," is running and responding to API calls (see ",(0,s.jsx)(t.a,{href:"/docs/bitcoin/etl/node-sync",children:"this page"}),")."]}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsxs)(t.p,{children:["Run ",(0,s.jsx)(t.code,{children:"eba"}),"."]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-shell",children:".\\eba.exe bitcoin traverse --from 0 --to 1000\n"})}),"\n",(0,s.jsx)(t.p,{children:"or if you want to track txo (for downstream statistics only) and the traverse window is wide, then you may use:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-shell",children:".\\eba.exe bitcoin traverse --to 863000 --track-txo --max-entries-per-batch 50000000\n"})}),"\n",(0,s.jsx)(t.p,{children:"You may use the following to get all the arguments and their documentation."}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-shell",children:".\\eba.exe bitcoin traverse --help\n"})}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(t.h3,{id:"performance-and-scalability",children:"Performance and Scalability"}),"\n",(0,s.jsx)(t.p,{children:"Traversing Bitcoin blocks can take a considerable amount of time.\nTo accelerate this,\nEBA heavily leverages multi-threading,\nand all time-consuming operations are implemented to be non-blocking.\nIt also minimizes the latency between submitting API calls and\nprocessing the returned data,\nwhich allows data to be handled in parallel threads,\nso it doesn't wait to encode and persist a block's graph elements before processing the next block.\nHowever, there is a limit to how many concurrent requests EBA and Bitcoin Core can process optimally.\nTherefore, despite these optimizations,\nif both applications are running on the same machine,\ntheir performance is ultimately bound by its I/O limits,\nprimarily the random read/write performance of the storage."}),"\n",(0,s.jsxs)(t.p,{children:["Since EBA processes each block independently,\none potential improvement is to deploy the application on a Kubernetes (k8s) cluster\n(requires dockerizing both EBA and Bitcoin Core).\nIn this setup, each instance of EBA service could process a subset of blocks\nwhile a load balancer directs its API calls to replicas of the Bitcoin Core services.\nThis horizontal scaling would significantly improve performance;\nhowever, because this requires a k8s cluster and cloud or on-premises HPC resources\nthat may not be ",(0,s.jsx)(t.a,{href:"/docs/gs/accessibility",children:"widely accessible"}),",\nthe specifics of such a deployment are not currently covered."]})]})}function h(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>r});var i=n(6540);const s={},o=i.createContext(s);function a(e){const t=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),i.createElement(o.Provider,{value:t},e.children)}}}]);